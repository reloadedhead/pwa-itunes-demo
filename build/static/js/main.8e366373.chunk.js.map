{"version":3,"sources":["serviceWorkerRegistration.ts","reportWebVitals.ts","components/app-shell/header/loved.tsx","components/app-shell/header/filtered.tsx","components/app-shell/header/index.tsx","components/app-shell/router/index.tsx","components/app-shell/index.tsx","router.tsx","index.tsx","utils/functions.ts","contexts/music.tsx","contexts/api.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","theme","createStyles","typography","padding","spacing","root","maxHeight","avatar","borderRadius","listItem","maxWidth","unloveButton","marginLeft","LovedPopover","handleClose","anchorEl","classes","useMusic","topAlbums","toggleLoveAlbum","lovedAlbums","filter","a","loved","Popover","className","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","length","List","map","ListItem","button","onClick","link","appleMusicLink","ListItemAvatar","Avatar","variant","src","artworkSource","ListItemText","primary","title","secondary","artist","ListItemSecondaryAction","IconButton","id","Typography","FilteredPopover","filterTerm","filteredAlbums","includes","disableAutoFocus","disableEnforceFocus","flexGrow","menuButton","display","breakpoints","up","search","position","shape","backgroundColor","fade","palette","common","white","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","Header","useState","setAnchorEl","searchAnchorEl","setSearchAnchorEl","setFilterTerm","handleCloseFilteredPopover","AppBar","Toolbar","noWrap","InputBase","placeholder","onChange","event","currentTarget","value","input","inputProps","edge","aria-label","TopAlbums","lazy","ContentRouter","fallback","CircularProgress","size","path","component","toolbar","mixins","content","AppShell","CssBaseline","Router","to","WrappedApp","prefersDarkMode","useMediaQuery","useMemo","createMuiTheme","main","type","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","modelAlbumsResponse","item","rights","releaseDate","category","price","amount","parseFloat","currency","initialState","loading","getTopAlbums","Promise","MusicContext","createContext","MusicProvider","children","setTopAlbums","setLoading","fetchAlbums","useApi","limit","data","Provider","albumId","albumIndex","findIndex","albums","useContext","ApiContext","ApiProvider","axios"],"mappings":"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","file":"static/js/main.8e366373.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { \n  createStyles,\n  List,\n  ListItem, \n  ListItemText, \n  makeStyles, \n  Popover, \n  Theme, \n  Typography, \n  ListItemAvatar,\n  Avatar,\n  IconButton,\n  ListItemSecondaryAction\n} from '@material-ui/core';\nimport React from 'react';\nimport { useMusic } from '../../../contexts/music';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    typography: {\n      padding: theme.spacing(2),\n    },\n    root: {\n      maxHeight: 600,\n    },\n    avatar: {\n      borderRadius: 6,\n    },\n    listItem: {\n      maxWidth: 350,\n    },\n    unloveButton: {\n      marginLeft: 15,\n    },\n  }),\n);\n\ninterface LovedPopover {\n  handleClose: () => void;\n  anchorEl: HTMLButtonElement | null;\n}\n\nconst LovedPopover = ({ handleClose, anchorEl }: LovedPopover) => {\n  const classes = useStyles();\n  const { topAlbums, toggleLoveAlbum } = useMusic();\n  const lovedAlbums = topAlbums.filter(a => a.loved);\n\n  const handleOpenAlbum = (link: string) => {\n    window.open(link);\n  };\n\n  const handleUnloveAlbum = (id: string) => {\n    toggleLoveAlbum(id);\n  };\n\n  return (\n    <Popover\n      className={classes.root}\n      open={Boolean(anchorEl)}\n      anchorEl={anchorEl}\n      onClose={handleClose}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'center',\n      }}\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'center',\n      }}\n    >\n      {lovedAlbums.length > 0 ? (\n        <List>\n          {lovedAlbums.map(a => (\n            <ListItem \n              key={`fav-${a.id}`} \n              className={classes.listItem} \n              button \n              onClick={() => handleOpenAlbum(a.appleMusicLink)}\n            >\n              <ListItemAvatar>\n                <Avatar className={classes.avatar} variant=\"square\" src={a.artworkSource} />\n              </ListItemAvatar>\n              <ListItemText primary={a.title} secondary={a.artist.title} />\n              <ListItemSecondaryAction className={classes.unloveButton}>\n                <IconButton onClick={() => handleUnloveAlbum(a.id)}>\n                  <CloseIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n      ): (\n        <Typography className={classes.typography}>No Loved Albums Yet!</Typography>\n      )}\n    </Popover>\n  );\n};\n\nexport default LovedPopover;\n","import { \n  createStyles,\n  List,\n  ListItem, \n  ListItemText, \n  makeStyles, \n  Popover, \n  Theme, \n  Typography, \n  ListItemAvatar,\n  Avatar,\n  IconButton,\n  ListItemSecondaryAction\n} from '@material-ui/core';\nimport React from 'react';\nimport { useMusic } from '../../../contexts/music';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    typography: {\n      padding: theme.spacing(2),\n    },\n    root: {\n      maxHeight: 400,\n    },\n    avatar: {\n      borderRadius: 6,\n    },\n    listItem: {\n      maxWidth: 350,\n    },\n    unloveButton: {\n      marginLeft: 15,\n    },\n  }),\n);\n\ninterface FilteredPopover {\n  handleClose: () => void;\n  anchorEl: HTMLInputElement | HTMLTextAreaElement | null;\n  filterTerm: string;\n}\n\nconst FilteredPopover = ({ handleClose, anchorEl, filterTerm }: FilteredPopover) => {\n  const classes = useStyles();\n  const { topAlbums, toggleLoveAlbum } = useMusic();\n  const filteredAlbums = topAlbums.filter(a => a.title.includes(filterTerm));\n\n  const handleOpenAlbum = (link: string) => {\n    window.open(link);\n  };\n\n  const handleUnloveAlbum = (id: string) => {\n    toggleLoveAlbum(id);\n  };\n\n  return (\n    <Popover\n      disableAutoFocus\n      disableEnforceFocus\n      className={classes.root}\n      open={Boolean(anchorEl)}\n      anchorEl={anchorEl}\n      onClose={handleClose}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'center',\n      }}\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'center',\n      }}\n    >\n      {filteredAlbums.length > 0 ? (\n        <List>\n          {filteredAlbums.map(a => (\n            <ListItem \n              key={`fav-${a.id}`} \n              className={classes.listItem} \n              button \n              onClick={() => handleOpenAlbum(a.appleMusicLink)}\n            >\n              <ListItemAvatar>\n                <Avatar className={classes.avatar} variant=\"square\" src={a.artworkSource} />\n              </ListItemAvatar>\n              <ListItemText primary={a.title} secondary={a.artist.title} />\n              <ListItemSecondaryAction className={classes.unloveButton}>\n                <IconButton onClick={() => handleUnloveAlbum(a.id)}>\n                  {a.loved ? <FavoriteIcon /> : <FavoriteBorderIcon />}\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n      ): (\n        <Typography className={classes.typography}>No Loved Albums Yet!</Typography>\n      )}\n    </Popover>\n  );\n};\n\nexport default FilteredPopover;\n","import React, { ChangeEvent, useState } from 'react';\nimport { createStyles, fade, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport IconButton from '@material-ui/core/IconButton';\nimport LovedPopover from './loved';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport FilteredPopover from './filtered';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginLeft: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n      display: 'none',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(1),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        width: '12ch',\n        '&:focus': {\n          width: '20ch',\n        },\n      },\n    },\n  }),\n);\n\nconst Header = () => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n  const [searchAnchorEl, setSearchAnchorEl] = useState<HTMLTextAreaElement | HTMLInputElement | null>(null);\n  const [filterTerm, setFilterTerm] = useState('');\n\n  const handleOpenFavourites = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleCloseFavourites = () => {\n    setAnchorEl(null);\n  };\n\n  const handleSearchInput = (event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n    if (event.currentTarget.value === '') {\n      handleCloseFilteredPopover();\n    } else {\n      setSearchAnchorEl(event.currentTarget);\n    }\n    setFilterTerm(event.currentTarget.value);\n  };\n\n  const handleCloseFilteredPopover = () => {\n    setSearchAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar>\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap className={classes.title}>\n            Top Albums\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search...\"\n              onChange={handleSearchInput}\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n          <IconButton \n            edge=\"start\"\n            className={classes.menuButton} \n            color=\"inherit\" \n            aria-label=\"menu\" \n            onClick={handleOpenFavourites}\n          >\n            <FavoriteIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <LovedPopover anchorEl={anchorEl} handleClose={handleCloseFavourites} />\n      <FilteredPopover \n        anchorEl={searchAnchorEl} \n        handleClose={handleCloseFilteredPopover} \n        filterTerm={filterTerm} \n      />\n    </div>\n  );\n}\n\nexport default Header;","import { CircularProgress } from '@material-ui/core';\nimport React, { lazy, Suspense } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nconst TopAlbums = lazy(() => import('../../../pages/top-albums'));\n\nconst ContentRouter = () => (\n  <Suspense fallback={<CircularProgress size={32} />}>\n    <Switch>\n      <Route path=\"/\" component={TopAlbums} />\n    </Switch>\n  </Suspense>\n);\n\nexport default ContentRouter;\n","import { makeStyles, Theme, createStyles, CssBaseline } from '@material-ui/core';\nimport React from 'react';\nimport Header from './header';\nimport ContentRouter from './router';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    toolbar: theme.mixins.toolbar,\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  })\n);\n\nconst AppShell = () => {\n  const classes = useStyles();\n  return (\n    <>\n      <CssBaseline />\n      <Header />\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <ContentRouter />\n      </main>\n    </>\n  )\n};\n\nexport default AppShell;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport AppShell from './components/app-shell';\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route path={['/']} component={AppShell} />\n      <Redirect to=\"/\" />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React, { useMemo } from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport Router from './router';\nimport { ApiProvider } from './contexts/api';\nimport { MusicProvider } from './contexts/music';\nimport { useMediaQuery, createMuiTheme, MuiThemeProvider } from '@material-ui/core';\n\nconst WrappedApp = () => {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  const theme = useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          primary: {\n            main: '#814CE6',\n          },\n          type: prefersDarkMode ? 'dark' : 'light',\n        },\n      }),\n    [prefersDarkMode]\n  );\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <ApiProvider>\n        <MusicProvider>\n          <Router />\n        </MusicProvider>\n      </ApiProvider>\n    </MuiThemeProvider>\n  )\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <WrappedApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { Album } from \"../types\";\n\nexport const modelAlbumsResponse = (response: unknown): Album[] => {\n  return ((response as never)['feed']['entry'] as never[]).map(item => ({\n    id: item['id']['attributes']['im:id'],\n    title: item['title']['label'],\n    artworkSource: item['im:image']?.[(item['im:image'] as never[]).length - 1]?.['label'],\n    appleMusicLink: item['link']['attributes']['href'],\n    rights: item['rights']['label'],\n    releaseDate: item['im:releaseDate']['label'],\n    artist: {\n      title: item['im:artist']['label'],\n      appleMusicLink: item['im:artist']?.['attributes']?.['href']\n    },\n    category: {\n      id: item['category']['attributes']['im:id'],\n      appleMusicLink: item['category']['attributes']['scheme'],\n      title: item['category']['attributes']['term']\n    },\n    price: {\n      amount: parseFloat(item['im:price']['attributes']['amount']),\n      currency: item['im:price']['attributes']['currency'],\n    },\n    loved: false,\n  }));\n};","import React, { createContext, ReactNode, useContext, useState } from 'react';\nimport { Album } from '../types';\nimport { modelAlbumsResponse } from '../utils/functions';\nimport { useApi } from './api';\n\ninterface MusicContext {\n  topAlbums: Album[];\n  loading: boolean;\n  getTopAlbums: (limit: number) => Promise<void>\n  toggleLoveAlbum: (albumId: string) => void;\n}\n\nconst initialState: MusicContext = {\n  topAlbums: [],\n  loading: false,\n  getTopAlbums: () => new Promise(() => {}),\n  toggleLoveAlbum: () => {},\n};\n\nconst MusicContext = createContext(initialState);\n\nexport const MusicProvider = ({ children }: { children: ReactNode }) => {\n  const [topAlbums, setTopAlbums] = useState<Album[]>([]);\n  const [loading, setLoading] = useState(false);\n  const { fetchAlbums } = useApi();\n\n  const toggleLoveAlbum = (albumId: string) => {\n    const albumIndex = topAlbums.findIndex(a => a.id === albumId);\n    if (albumIndex > -1) {\n      const albums = [...topAlbums];\n      albums[albumIndex].loved = !albums[albumIndex].loved;\n      setTopAlbums(albums);\n    };\n  };\n\n  const getTopAlbums = async (limit: number) => {\n    try {\n      setLoading(true);\n      setTopAlbums(modelAlbumsResponse((await fetchAlbums(limit)).data));\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <MusicContext.Provider value={{ topAlbums, loading, getTopAlbums, toggleLoveAlbum }}>\n      {children}\n    </MusicContext.Provider>\n  )\n};\n\nexport const useMusic = () => useContext(MusicContext);\n","import React, { createContext, ReactNode, useContext } from 'react';\nimport axios, { AxiosPromise } from 'axios';\n\ninterface ApiContext {\n  fetchAlbums: (limit: number) => AxiosPromise;\n}\n\nconst initialState: ApiContext = {\n  fetchAlbums: () => new Promise(() => {}),\n};\n\nconst ApiContext = createContext(initialState);\n\nexport const ApiProvider = ({ children }: { children: ReactNode }) => {\n  \n  const fetchAlbums = (limit = 100) => {\n    return axios.get(`https://itunes.apple.com/us/rss/topalbums/limit=${limit}/json`);\n  }\n\n  return (\n    <ApiContext.Provider value={{ fetchAlbums }}>\n      {children}\n    </ApiContext.Provider>\n  );\n};\n\nexport const useApi = () => useContext(ApiContext);\n"],"sourceRoot":""}