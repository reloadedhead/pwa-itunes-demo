{"version":3,"sources":["components/album-card/index.tsx","pages/top-albums/index.tsx"],"names":["useStyles","makeStyles","root","maxWidth","margin","borderRadius","padding","height","display","flexDirection","media","backgroundColor","paddingBottom","grow","flex","AlbumCard","memo","album","classes","toggleLoveAlbum","useMusic","Card","className","CardMedia","image","artworkSource","CardContent","Typography","variant","artist","title","Date","releaseDate","getFullYear","category","CardActions","Chip","color","label","price","currency","amount","Tooltip","IconButton","onClick","id","loved","window","open","appleMusicLink","prevProps","nextProps","TopAlbums","getTopAlbums","topAlbums","useEffect","console","log","Grid","container","spacing","direction","justify","map","item","sm","xs"],"mappings":"8RASMA,EAAYC,aAAW,iBAAO,CAClCC,KAAM,CACJC,SAAU,IACVC,OAAQ,OACRC,aAAc,GACdC,QAAS,GACTC,OAAQ,OACRC,QAAS,OACTC,cAAe,UAEjBC,MAAO,CACLL,aAAc,EACdE,OAAQ,IACRI,gBAAiB,sBACjBC,cAAe,QAEjBC,KAAM,CACJC,KAAM,OAiDKC,EAzCGC,gBAAK,YAA2B,IAAxBC,EAAuB,EAAvBA,MAClBC,EAAUlB,IACRmB,EAAoBC,cAApBD,gBAUR,OACE,eAACE,EAAA,EAAD,CAAMC,UAAWJ,EAAQhB,KAAzB,UACE,cAACqB,EAAA,EAAD,CAAWD,UAAWJ,EAAQR,MAAOc,MAAOP,EAAMQ,gBAClD,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,WAApB,mBACMX,EAAMY,OAAOC,MADnB,iBAC8B,IAAIC,KAAKd,EAAMe,aAAaC,cAD1D,iBAC6EhB,EAAMiB,SAASJ,SAE5F,cAACH,EAAA,EAAD,UAAaV,EAAMa,WAErB,qBAAKR,UAAWJ,EAAQL,OACxB,eAACsB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAMC,MAAM,YAAYC,MAAK,UAAKrB,EAAMsB,MAAMC,SAAjB,YAA6BvB,EAAMsB,MAAME,UACtE,qBAAKnB,UAAWJ,EAAQL,OACxB,cAAC6B,EAAA,EAAD,CAASZ,MAAM,OAAf,SACE,cAACa,EAAA,EAAD,CAAYC,QAtBI,WACtBzB,EAAgBF,EAAM4B,KAqBhB,SACG5B,EAAM6B,MAAQ,cAAC,IAAD,IAAmB,cAAC,IAAD,QAGtC,cAACJ,EAAA,EAAD,CAASZ,MAAM,sBAAf,SACE,cAACa,EAAA,EAAD,CAAYC,QAvBW,WAC7BG,OAAOC,KAAK/B,EAAMgC,iBAsBZ,SACE,cAAC,IAAD,iBAMT,SAACC,EAAWC,GAAZ,OACDD,EAAUjC,MAAM4B,KAAOM,EAAUlC,MAAM4B,IAAMK,EAAUjC,MAAM6B,QAAUK,EAAUlC,MAAM6B,SC/C1EM,UArBG,WAAO,IAAD,EACchC,cAA5BiC,EADc,EACdA,aAAcC,EADA,EACAA,UAStB,OAPAC,qBAAU,WAER,OADAF,EAAa,KACN,WACLG,QAAQC,IAAI,cAEb,IAGD,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,UAAU,MAAMC,QAAQ,aAApD,SACGR,EAAUS,KAAI,SAAA9C,GAAK,OAClB,cAACyC,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAtB,SACE,cAAC,EAAD,CAAWjD,MAAOA,KADWA,EAAM4B","file":"static/js/4.06f5d666.chunk.js","sourcesContent":["/* eslint-disable react/display-name */\nimport { Card, CardActions, CardContent, CardMedia, Chip, IconButton, makeStyles, Tooltip, Typography } from '@material-ui/core';\nimport React, { memo } from 'react';\nimport { Album } from '../../types';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { useMusic } from '../../contexts/music';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    maxWidth: 343,\n    margin: 'auto',\n    borderRadius: 12,\n    padding: 12,\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  media: {\n    borderRadius: 6,\n    height: 120,\n    backgroundColor: 'rgba(0, 0, 0, 0.08)',\n    paddingBottom: '100%',\n  },\n  grow: {\n    flex: 1,\n  }\n}));\n\ninterface AlbumCard {\n  album: Album;\n}\n\nconst AlbumCard = memo(({ album }: AlbumCard) => {\n  const classes = useStyles();\n  const { toggleLoveAlbum } = useMusic();\n\n  const handleLoveAlbum = () => {\n    toggleLoveAlbum(album.id);\n  }\n\n  const handleOpenInAppleMusic = () => {\n    window.open(album.appleMusicLink);\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardMedia className={classes.media} image={album.artworkSource} />\n      <CardContent>\n        <Typography variant=\"overline\">\n          {`${album.artist.title} · ${new Date(album.releaseDate).getFullYear()} · ${album.category.title}`}\n        </Typography> \n        <Typography>{album.title}</Typography> \n      </CardContent>\n      <div className={classes.grow} />\n      <CardActions>\n        <Chip color=\"secondary\" label={`${album.price.currency} ${album.price.amount}`} />\n        <div className={classes.grow} />\n        <Tooltip title=\"Love\">\n          <IconButton onClick={handleLoveAlbum}>\n            {album.loved ? <FavoriteIcon /> : <FavoriteBorderIcon />}\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Open on Apple Music\">\n          <IconButton onClick={handleOpenInAppleMusic}>\n            <LaunchIcon />\n          </IconButton>\n        </Tooltip>\n      </CardActions>\n    </Card>\n  );\n}, (prevProps, nextProps) => \n  prevProps.album.id === nextProps.album.id || prevProps.album.loved === nextProps.album.loved);\n\nexport default AlbumCard;\n","import { Grid } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport AlbumCard from '../../components/album-card';\nimport { useMusic } from '../../contexts/music';\n\nconst TopAlbums = () => {\n  const { getTopAlbums, topAlbums } = useMusic();\n\n  useEffect(() => {\n    getTopAlbums(100);\n    return () => {\n      console.log('unmount');\n    }\n  }, []);\n\n  return (\n    <Grid container spacing={1} direction=\"row\" justify=\"flex-start\">\n      {topAlbums.map(album => (\n        <Grid item sm={3} xs={12} key={album.id}>\n          <AlbumCard album={album} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nexport default TopAlbums;\n"],"sourceRoot":""}